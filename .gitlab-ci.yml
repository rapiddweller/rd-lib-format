stages:
  - setup
  - build
  # - quality
  - distribution
  - publish

# common vars for multiple stages/jobs
variables:
  ARTIFACT_ID: "rd-lib-format"
  ARTIFACT_VERSION_BASE: "1.0.16" # should be updated with the final release (expected value: next release version)
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository"
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"

# setup
# ARTIFACT_VERSION is set to var ARTIFACT_VERSION_BASE
setup:jdk-8:
  stage: setup
  image:
    name: alpine/git:latest
    entrypoint: [""]
  script:
    - export RD_PROJECT_LATEST_TAG=$(git describe --abbrev=0 --tags)
    - echo "RD_PROJECT_LATEST_TAG=$RD_PROJECT_LATEST_TAG" >> build.env
    - export JAVA_JDKVERSION_TAG="jdk-8"
    - echo "JAVA_JDKVERSION_TAG=$JAVA_JDKVERSION_TAG" >> build.env
    - |
      if [ -z "$CI_COMMIT_TAG" ];
      then
        export ARTIFACT_VERSION=$ARTIFACT_VERSION_BASE-$CI_PIPELINE_ID+$JAVA_JDKVERSION_TAG
        echo "ARTIFACT_VERSION=$ARTIFACT_VERSION" >> build.env
      else
        export ARTIFACT_VERSION=$CI_COMMIT_TAG+$JAVA_JDKVERSION_TAG
        echo "ARTIFACT_VERSION=$ARTIFACT_VERSION" >> build.env
      fi
    - export ARTIFACT_FULLNAME=$ARTIFACT_ID-$ARTIFACT_VERSION
    - echo "ARTIFACT_FULLNAME=$ARTIFACT_FULLNAME" >> build.env
    - export
  artifacts:
    reports:
      dotenv: build.env


setup:jdk-11:
  stage: setup
  image:
    name: alpine/git:latest
    entrypoint: [""]
  script:
    - export RD_PROJECT_LATEST_TAG=$(git describe --abbrev=0 --tags)
    - echo "RD_PROJECT_LATEST_TAG=$RD_PROJECT_LATEST_TAG" >> build.env
    - export JAVA_JDKVERSION_TAG="jdk-11"
    - echo "JAVA_JDKVERSION_TAG=$JAVA_JDKVERSION_TAG" >> build.env
    - |
      if [ -z "$CI_COMMIT_TAG" ];
      then
        export ARTIFACT_VERSION=$ARTIFACT_VERSION_BASE-$CI_PIPELINE_ID+$JAVA_JDKVERSION_TAG
        echo "ARTIFACT_VERSION=$ARTIFACT_VERSION" >> build.env
      else
        export ARTIFACT_VERSION=$CI_COMMIT_TAG+$JAVA_JDKVERSION_TAG
        echo "ARTIFACT_VERSION=$ARTIFACT_VERSION" >> build.env
      fi
    - export ARTIFACT_FULLNAME=$ARTIFACT_ID-$ARTIFACT_VERSION
    - echo "ARTIFACT_FULLNAME=$ARTIFACT_FULLNAME" >> build.env
    - export
  artifacts:
    reports:
      dotenv: build.env


###################### Test / Build ######################

.update-mvn-project: &update-mvn-project
  before_script:
    - sed -i 's/--project-version--/'$ARTIFACT_VERSION'/g' pom.xml
    - |
      if [ $JAVA_JDKVERSION_TAG = "jdk-11" ];
      then
        sed -i 's#<java_source_version>1.8</java_source_version>#<java_source_version>11</java_source_version>#' pom.xml
        sed -i 's#<java_target_version>1.8</java_target_version>#<java_target_version>11</java_target_version>#' pom.xml
      fi

build:jdk-8:
  <<: *update-mvn-project
  image: maven:3-adoptopenjdk-8
  needs:
    - job: setup:jdk-8
      artifacts: true
  stage: build
  artifacts:
    paths:
      - target/*.jar
  script:
    - mvn -version
    - mvn $MAVEN_CLI_OPTS clean package

build:jdk-11:
  <<: *update-mvn-project
  image: maven:3-adoptopenjdk-11
  needs:
    - job: setup:jdk-11
      artifacts: true
  stage: build
  allow_failure: true
  artifacts:
    paths:
      - target/*.jar
  script:
    - mvn $MAVEN_CLI_OPTS clean package

###################### Sonarqube ######################


###################### Assembly and Deploy ######################

assembly:jdk-8:
  <<: *update-mvn-project
  needs:
    - job: setup:jdk-8
      artifacts: true
    - job: build:jdk-8
      artifacts: true
  image: maven:3.6.3-adoptopenjdk-8
  stage: distribution
  artifacts:
    paths:
      - target/*.tar.gz
      - target/*.zip
  script:
    - mvn $MAVEN_CLI_OPTS -Dmaven.test.skip=true clean install site:site assembly:single

assembly:jdk-11:
  <<: *update-mvn-project
  needs:
    - job: setup:jdk-11
      artifacts: true
    - job: build:jdk-11
      artifacts: true
  image: maven:3-adoptopenjdk-11
  stage: distribution
  artifacts:
    paths:
      - target/*.tar.gz
      - target/*.zip
      - target/site/
  script:
    - mvn $MAVEN_CLI_OPTS -Dmaven.test.skip=true clean install site:site assembly:single
  allow_failure: true

deploy:jdk-8:
  <<: *update-mvn-project
  needs:
    - job: setup:jdk-8
      artifacts: true
    - job: build:jdk-8
      artifacts: true
  image: maven:3.6.3-adoptopenjdk-8
  stage: distribution
  script:
    - mvn $MAVEN_CLI_OPTS -Dmaven.test.skip=true clean install deploy
